When would you want to use a remote repository rather than keeping all your work local?

I want to use a remote repo when working on a tema where developers work on the same code base.
A remote repo is also useful for working in the same project in different machines.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

This is the best way to avoid dealing with conflicts at random times.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

We use branch to create a copy of a version of our repo so we can make changes to it without
affecting the actual code.
We use clone to copy a repo to our working directory so we can edit code me our own commits.
Clone copies from a remote repo to your environment and does not keep a reference from the 
repo creator except for their commits, so we can use Github fork if we want to clone a remote repo to another remote location and keep reference to the original repo owner.

What is the benefit of having a copy of the last known state of the remote stored locally?

This way we can check the diffrences between working repo and remote repo even offline.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I could send the source code via e-mail or use some data store in the cloud like dropbox, but
this way I would lose all good git stuf like keeping history of changes, being able to edit 
code without having side effects in the app, being to aalize a partner commit before merging
to master or having my commit analized as well, and so many others..